spring:
  application:
    name: backend
  profiles:
    active: ${SPRING_ACTIVE_PROFILE}
    # This sets the active profile to dev
  graphql:
    graphiql:
      enabled: true
      # This enables the graphiql interface
  security:
    oauth2:
      resourceserver:
        jwt:
          issuer-uri: ${COGNITO_JWT_URL}
          # This should be the cognito uri that is https://cognito-idp.<aws-region>.amazonaws.com/<cognito-pool-id>
  datasource:
    url: ${DATABASE_URL}
    username: ${POSTGRES_USER}
    password: ${POSTGRES_PASSWORD}
    # This should be the database url, username and password
  jpa:
    properties:
      hibernate:
        ddl-auto: none
        dialect: org.hibernate.dialect.PostgreSQLDialect
        # This sets the Hibernate dialect to PostgreSQL
# Redis and Jedis config
redis:
  host: ${REDIS_HOST}
  port: ${REDIS_PORT}
# Actuator config
management:
  endpoints:
    web:
      base-path: "/details"
      # This should be the base path for the actuator endpoints
    jmx:
      exposure:
        include: "health"
        # This should be the actuator endpoints that you want to expose

chat:
  isEnabled: ${IS_CHAT_ENABLED}
  openApiKey: ${OPEN_API_KEY}
  openApiProjectId: ${OPEN_API_PROJECT_ID}
  openApiOrganizationId: ${OPEN_API_ORGANIZATION_ID}

jira:
  accessToken: ${JIRA_ACCESS_TOKEN}
  email: ${JIRA_EMAIL}
  url: ${JIRA_URL}
  projectKey: ${JIRA_PROJECT_KEY}
# This should be the jira information for reporting bugs

api:
  key: ${API_KEY}
# This key is used to access the backend

server:
  max-http-request-header-size: 20000
# This allows larger headers to be sent