
extend type Mutation {
    createUser(userInput: UserInput): User
    saveUserDetails(id: String!, detailsInput: UserDetailsInput): User
    saveUserBilling(userBillingInput: UserBillingInput): MutationResponse
    deleteUser: MutationResponse
    deactivateUser(id: String!): MutationResponse @admin
}

extend type Query {
    getUser: User
    checkCurrentUserDetailsExist: Boolean
    getUserBilling: UserBilling
}

input UserInput {
    id: String!
    email: String!
    name: String
}

input UserDetailsInput {
    contactNumber: String
    houseName: String
    addressStreet: String
    addressCity: String
    addressCounty: String
    addressPostcode: String
}

input UserBillingInput {
    userId: String
    accountId: String
    customerId: String
}

type User {
    id: String!
    email: String!
    name: String
    status: String
    details: UserDetails
    items: [Item]
}

type UserDetails {
    id: String!
    contactNumber: String
    houseName: String
    addressStreet: String
    addressCity: String
    addressCounty: String
    addressPostcode: String
}

type UserBilling {
    userId: String!
    accountId: String
    customerId: String
}