
stages:
  - build
  - test
  - integration

services:
  - name: postgres:latest
    alias: postgres

variables:
  POSTGRES_DB: test
  POSTGRES_USER: postgres
  POSTGRES_PASSWORD: password
  
before_script:
  - echo "Setting up the environment..."
  - cd ./product/backend/

set_enviroment_variables:
  stage: build
  script:
    - echo "Copying the test-application.yml into a application.yml file..."
    - cp ./application/backendService/src/main/resources/test-application.example.yml ./application/backendService/src/main/resources/application.yml
    - echo "Running backend linting..."
  
setup_database:
  stage: build
  image: liquibase/liquibase:latest
  script:
    - echo "Setting up the database..."
    - cd database/
    - liquibase --url=jdbc:postgresql://postgres:5432/test --username=postgres --password=password --changelog-file=/changelogs/changelog-master.xml update
    - echo "Database is up and running"

lint_backend:
  stage: test
  image: maven:3.9.9-amazoncorretto-21-alpine
  script:
    - echo "Running backend linting..."
    - cd ./application/
    - mvn clean checkstyle:check
    - echo "Backend linting passed"

unit_test_backend:
  stage: test
  image: maven:3.9.9-amazoncorretto-21-alpine
  script:
    - echo "Running unit tests..."
    - cd ./application/
    - mvn clean test
    - echo "Unit tests passed"

run_backend_container:
  stage: integration
  script:
    - echo "Running the backend container..."
    - docker run -d final-project-backend
    - echo "Backend containers are up and running"

integration_test_backend:
  stage: integration
  image: maven:3.9.9-amazoncorretto-21-alpine
  script:
    - echo "Running integration tests..."
    - cd ./application/
    - mvn clean verify -P integration-tests
